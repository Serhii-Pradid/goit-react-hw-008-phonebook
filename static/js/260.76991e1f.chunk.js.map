{"version":3,"file":"static/js/260.76991e1f.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","views/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectStatusFilter = state => state.filters;","// extracted by mini-css-extract-plugin\nexport default {\"fieldForm\":\"Form_fieldForm__EzSwU\",\"buttonForm\":\"Form_buttonForm__aSP9Y\"};","import { useState } from \"react\";\nimport css from './Form.module.css'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"redux/contacts/operations\";\nimport { selectContacts } from \"redux/contacts/selectors\"\n\n\n  const Form = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  \n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = (event) => {\n  const {name, value} = event.target;\n\n  switch (name) {\n    case 'name':\n      setName(value);\n      break;\n\n      case 'number':\n      setNumber(value);\n      break;\n  \n    default:\n      break;\n  }\n}\n\nconst handleSubmit = event => {\n  event.preventDefault();\n\n  //const form = event.currentTarget;\n  const formName = event.currentTarget.name.value;\n  const formNumber = event.currentTarget.number.value;\n  console.log(name, number)\n\n  if (contacts.some(({ name }) => name === formName)) {\n    return alert(`${formName} is already in contacts`);\n  }\n\n  dispatch(addContact({name:formName, number: formNumber}));\n  //form.reset();\n  setName('');\n  setNumber('');\n };\n\n   return (\n            <form onSubmit={handleSubmit}>\n<div className={css.fieldForm}>\n      <label > Name\n   <input\n  type=\"text\"\n  placeholder=\"Name Surname\"\n  name=\"name\"\n  value={name}\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n  required\n  onChange={handleChange}\n  />\n    </label>\n\n     <label > Number\n\n   <input\n  type=\"tel\"\n  placeholder=\"xxx-xx-xx\"\n  name=\"number\"\n  value={number}\n  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n  required\n  onChange={handleChange}\n  />\n      </label>\n</div>\n\n<button className={css.buttonForm} type=\"submit\"> Add Contact </button>\n\n</form>\n         );\n  }  \n\n\n\nexport default Form;","import { useSelector, useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/filterSlice';\nimport { selectStatusFilter } from \"redux/contacts/selectors\";\nimport PropTypes from 'prop-types';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectStatusFilter);\n\nconst handleFilterChange = event => dispatch(filterContacts(event.currentTarget.value));\n\n    return (\n    <ul>\n        <label> Find contacts by name:\n      <input \n      type=\"text\" \n      name=\"filter\"\n      value={filter} \n      placeholder='Name Surname'\n      onChange={handleFilterChange} />\n     </label>\n    </ul>\n    )\n}\n\nFilter.propTypes ={\n    value: PropTypes.string,\n    onChange: PropTypes.func\n}","// extracted by mini-css-extract-plugin\nexport default {\"buttonDelete\":\"ContactList_buttonDelete__3LEoC\"};","import css from './ContactList.module.css'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from \"redux/contacts/operations\";\nimport { selectContacts, selectStatusFilter } from \"redux/contacts/selectors\"\nimport authSelectors from 'redux/auth/auth-selectors';\n\n\nexport const ContactList = () => {\n\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const dispatch = useDispatch();\n\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectStatusFilter);\n\n    const visibleContacts = [...contacts.filter(contact => contact.name.toLowerCase().includes(filter)),\n        \n  ];\n\n    const handleDeleteContact = contactId => {\n          dispatch(deleteContact(contactId));\n    };\n      \n  //console.log(visibleContacts)\n\n\n    return (\n      <div>\n     {isLoggedIn && ( <ul>\n        {visibleContacts.map(({id, name, number}) => (\n                <li key={id} >\n                    <p> {name} : {number} </p>\n                    <button className={css.buttonDelete}  \n                            onClick={ () => (handleDeleteContact(id)) }> Delete </button>\n                </li>\n            ))}\n    </ul>)}   \n    </div>\n    );\n};\n\n\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectIsLoading, selectError } from \"redux/contacts/selectors\";\n\nimport Form from 'components/Form/Form';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nimport './Contacts.module.css'\n\nconst Contacts = () => {\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  // Викликаємо операцію\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <section>\n      <h2>\n        Enter a name and phone number to add a contact\n      </h2>\n      <Form />\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </section>\n  );\n};\n\nexport default Contacts;"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectStatusFilter","filters","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","handleChange","event","_event$target","target","value","_jsxs","onSubmit","preventDefault","formName","currentTarget","formNumber","console","log","some","_ref","alert","concat","addContact","children","className","css","_jsx","type","placeholder","pattern","title","required","onChange","Filter","filter","filterContacts","ContactList","isLoggedIn","authSelectors","visibleContacts","_toConsumableArray","contact","toLowerCase","includes","map","id","onClick","contactId","deleteContact","useEffect","fetchContacts","Form"],"sourceRoot":""}